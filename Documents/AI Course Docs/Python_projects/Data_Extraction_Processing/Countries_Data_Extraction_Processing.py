import numpy as np
import pandas as pd
import ssl
import requests

ssl._create_default_https_context = ssl._create_unverified_context

# You can also use this section to suppress warnings generated by your code:
def warn(*args, **kwargs):
    pass
import warnings
warnings.warn = warn
warnings.filterwarnings('ignore')

URL="https://www.worldometers.info/world-population/population-by-country/"

headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 "
                  "(KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36"
}

# Get page content with a browser-like header
response = requests.get(URL, headers=headers)
response.raise_for_status()  # raises error if request failed

# Parse HTML with pandas
tables = pd.read_html(response.text)
df = tables[0]  # first table on the page

# Replace the column headers with column numbers
df.columns = range(df.shape[1])

# Retain columns with index 0,1,4 and 5 (name of country, population in 2025, density (p/km^2) and land area )
df = df[[1,2,5,6]]

display_criteria = int(input("(Please choose an integer)\nChoose to display the top 10 countries depending on: \n1-Population \n2-Density\n3-Land Area"))

# Retain the Rows with index 1 to 10, indicating the top 10 countires based on population as listed on website.
if(display_criteria == 1):
    df = df.iloc[0:10,:]
    df.columns = ['Country','Population','Density in P/km^2','Area in km^2']
    # Now divide by 1 million
    df['Population'] = df['Population'] / 1_000_000
    # Use numpy.round() method to round the value to 2 decimal places.
    df[['Population']]= np.round(df[['Population']],2)
    # Rename the column header from 'Population' to 'Population (Millions)'
    df.rename(columns = {'Population' : 'Population'})
    # Load the DataFrame to the CSV file named "Largest_economies.csv"
    df.to_csv(r"C:\Users\pc castle\Documents\Largest_populations.csv", sep=';', index=False)
elif(display_criteria == 2):
    df=df.sort_values(by=5, ascending=False).head(10)
    df.columns = ['Country','Population','Density in P/km^2','Area in km^2']
    # Change the population to millions.
    # Now divide by 1 million
    df['Population'] = df['Population'] / 1_000_000
    # Use numpy.round() method to round the value to 2 decimal places.
    df[['Population']]= np.round(df[['Population']],2)
    # Rename the column header from 'Population' to 'Population (Millions)'
    df.rename(columns = {'Population' : 'Population'})
    # Load the DataFrame to the CSV file named "Largest_economies.csv"
    df.to_csv(r"C:\Users\pc castle\Documents\Largest_densities.csv",sep=';', index=False)
else:
    df=df.sort_values(by=6, ascending=False).head(10)
    df.columns = ['Country','Population','Density in P/km^2','Area in km^2']
    # Change the population to millions.
    # Now divide by 1 million
    df['Population'] = df['Population'] / 1_000_000
    # Use numpy.round() method to round the value to 2 decimal places.
    df[['Population']]= np.round(df[['Population']],2)
    # Rename the column header from 'Population' to 'Population (Millions)'
    df.rename(columns = {'Population' : 'Population'})
    # Load the DataFrame to the CSV file named "Largest_economies.csv"
    df.to_csv(r"C:\Users\pc castle\Documents\Largest_areas.csv",sep=';', index=False)


print("Code ran successfully")